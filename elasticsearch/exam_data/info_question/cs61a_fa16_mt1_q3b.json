{"q_txt": "Implement significant, which takes positive integers n and k. It returns the k most significant digits of n as an integer. These are the first k digits of n, starting from the left. If n has fewer than k digits, it returns n. You may not use round, int, str, or any functions from the math module. You may use pow, which raises its first argument to the power of its second: pow(9, 2) is 81 and pow(9, 0.5) is 3.0.", "extra": "countizard recursion def significant (n , k): \"\"\" Return the K most significant digits of N. >>> significant (12345 , 3) 123 >>> significant (12345 , 7) 12345 \"\"\" if return n return significant", "number": "3b", "has_solution": true, "s_txt": "n < pow (10 , k): return n return significant (n // 10 , k)"}